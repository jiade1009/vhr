spring:
  datasource:
    type: com.alibaba.druid.pool.DruidDataSource
    username: root
    password: mysql0704
    url: jdbc:mysql://localhost:3306/vhr?useUnicode=true&characterEncoding=UTF-8&serverTimezone=Asia/Shanghai
  rabbitmq:
    username: guest
    password: guest
    host: 127.0.0.1
#    发送者开启 confirm 确认机制
#    publisher-confirms: true
    # 确认消息已发送到交换机（Exchange）选择确认类型为交互 correlated
    publisher-confirm-type: correlated
    publisher-returns: true
    port: 5672
  redis:
    host: 127.0.0.1
    database: 0
    port: 6379
    password: jing2020
  cache:
    cache-names: menus_cache
  jackson:
    ## 格式为yyyy-MM-dd HH:mm:ss
    date-format: yyyy-MM-dd HH:mm:ss
    ## 定时区，解决8小时的时间差问题
    time-zone: GMT+8

server:
  port: 8081
  compression:
    enabled: true
fastdfs:
  nginx:
    host: http://127.0.0.1:8889/
# 日志配置
logging:
  level:
    # web日志
    org.springframework.web: info
    org.springframework.web.socket.config.WebSocketMessageBrokerStats: error
    # security 日志
    org.springframework.security: info
    # mybatis日志
    org.mybatis: info
    org.javaboy.mailserver: info
    org.javaboy.vhr: info
    org.javaboy.vhr.service: info
    org.javaboy.vhr.task: info
    org.javaboy.vhr.utils: info
    org.javaboy.vhr.config: info
    org.javaboy.vhr.controller: info
  charset:
    # 输出控制台编码
    console: UTF-8
    # 输出文件编码
    file: UTF-8
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger:%L- %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36}:%L - %msg%n"
  # 输出文件名及路径，不配置则不输出文件
  file:
    # 切记，该文件表示正在产出日志的日志文件。并不会打包，当文件大于max-file-size,会根据file-name-pattern格式打包
    # 名称为log/ota.log文件夹会在项目根目录下，打包后会在启动包同目录下；名称为/log/ota.log的文件夹会在项目所在磁盘的跟目录下
    name: log/ota.log
  logback:
    rollingpolicy:
      # 单文件的大小，默认10M, 超过之后打包成一个日志文件
      max-file-size: 1MB
      # 日志保存的天数
      max-history: 30
      # 打包文件格式,默认： ${LOG_FILE}.%d{yyyy-MM-dd}.%i.gz,书写格式为：文件路径/文件名.%i.文件后缀,其中%i不可省去，否则无日志显示
      # 例如： 日期为：2021/11/5 ,则打包文件之后为： log/ota.2021-11-05.0.gz,0表示日志的第一部分，后续就是，1,2,3...
      # 如果是压缩包，里面会多一个名log/ota.2021-11-05.0的日志文件
      # 如下面的例子，打包之后为: log/2021-11/ota.2020-11-5.0.log，这是一个日志文件
      file-name-pattern: log/%d{yyyy-MM}/ota.%d{yyyy-MM-dd}.%i.log
#调用python脚本配置
python:
  command: /Library/Frameworks/Python.framework/Versions/3.9/bin/python3
  basePath: /Users/sam/IdeaProjects/ghk_stock_p
  apiFile: /web/main_api.py

# 定时任务配置
task:
  cron:
    StockMessageSend:
      resend: 0/30 * * * * ?
    MailSend:
      resend: 0/10 * * * * ?
    StockCore:
      # 每周一到周五的15:30 周线数据生成
      weekly: 0 30 15 ? * MON-FRI
      h_weekly: 0 30 16 ? * MON-FRI
      # 美股收盘时间按照北京时间，则是周二到周六的凌晨4点(冬令5点）,统一按照22点00生成
      u_weekly: 0 0 22 ? * TUE-SAT
#      u_weekly: 0 0/5 * ? * TUE-SAT
      # 买入策略运行
      buyrule: 0 0 16 ? * MON-FRI
      h_buyrule: 0 0 17 ? * MON-FRI
      u_buyrule: 0 40 22 ? * TUE-SAT
      # buyrule: 0 0/2 * ? * MON-FRI
      # 回头草策略运行
      uturnrule: 0 30 16 ? * MON-FRI
      h_uturnrule: 0 30 17 ? * MON-FRI
      u_uturnrule: 0 10 23 ? * TUE-SAT
      # 买入操作
      buy: 0 31 9 ? * MON-FRI
      # 卖出操作
      sell_0: 0 30-59/5 9 ? * MON-FRI
      sell_1: 0 0-29/5 11 ? * MON-FRI
      sell_2: 0 */5 10,13,14 ? * MON-FRI
      #      buy: 0 0/10 * ? * MON-FRI
      # 股票交易结果查询（买入和卖出）
      orderQuery_0: 0 30-59/10 9 ? * MON-FRI
      orderQuery_1: 0 0-30/10 11 ? * MON-FRI
      orderQuery_2: 0 */10 10,13,14 ? * MON-FRI
      orderQuery_3: 0 0 15 ? * MON-FRI
      # 股票撤销交易结果查询（买入和卖出）
      revokeQuery_0: 0 30-59/1 9 ? * MON-FRI
      revokeQuery_1: 0 0-30/1 11 ? * MON-FRI
      revokeQuery_2: 0 */1 10,13,14 ? * MON-FRI
      revokeQuery_3: 0 1 15 ? * MON-FRI
      #股票代码更新
      stockCodeUpdate: 0 0 1 ? * SAT
      # 每日收盘信息更新（所持股票）
      dailyRefresh: 0 0 17-19/1 ? * MON-FRI
      # 每日股票成交结果查询
      cjcx:  0 10 10-15/1 ? * MON-FRI
      # 收盘股票卖出交易结果检查
      check_sell: 0 20 15 ? * MON-FRI
      # 每日巡检（A、H)
      inspection: 0 0 21 ? * MON-FRI
      # 每日巡检（U)
      u_inspection: 0 40 23 ? * TUE-SAT
      # 智能订单跟踪
      ai_order_0: 0 30-59/5 9 ? * MON-FRI
      ai_order_1: 0 0-29/5 11 ? * MON-FRI
      ai_order_2: 0 */5 10,13,14 ? * MON-FRI

# 与python客户端通信签名配置
encrypt:
  idx: 2
  key: ghk2022
